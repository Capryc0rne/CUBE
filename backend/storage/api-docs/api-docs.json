{
    "openapi": "3.0.0",
    "info": {
        "title": "(Re)Sources Relationnelles",
        "version": "0.3.0"
    },
    "servers": [
        {
            "url": "http://localhost:80/api"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in to the application",
                "operationId": "login",
                "requestBody": {
                    "description": "User's login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        },
                                        "remember": {
                                            "type": "boolean",
                                            "example": false
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les informations d'identification fournies ne sont pas correctes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Votre compte est banni."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Create a new user account",
                "operationId": "signup",
                "requestBody": {
                    "description": "User's registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "firstName",
                                    "lastName",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration and user login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Email address already in use",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'adresse email est déjà utilisée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out of the application",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid verification token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wrong number of segments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verifyUser": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's authentication status",
                "operationId": "verifyUser",
                "responses": {
                    "200": {
                        "description": "User is authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/UserData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/email/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's email address",
                "operationId": "verifyEmail",
                "requestBody": {
                    "description": "Verification token for email verification",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your_verification_token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email vérifié avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid verification token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token de vérification invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password/send-mail": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send a password reset email; if the email does not exist, still send an email to prevent brute force attacks",
                "operationId": "forgotPassword",
                "requestBody": {
                    "description": "Email to send the password reset link",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Un email de réinitialisation de mot de passe a été envoyé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user's password",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "Data required for password reset",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "password",
                                    "verifyPassword"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "your_reset_token"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "verifyPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mot de passe réinitialisé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Password mismatch or invalid reset token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les mots de passe ne correspondent pas | Token de réinitialisation invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/allCategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Fetch all categories",
                "description": "Fetches all categories including inactive ones. This endpoint is restricted to admin users.",
                "operationId": "getAllCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Fetch active categories",
                "description": "Fetches only active categories. This endpoint is available to all users.",
                "operationId": "getActiveCategories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/category/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Fetch a category",
                "description": "Fetches a category by its ID. This endpoint is available to all users.",
                "operationId": "getCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "$ref": "#/components/schemas/CategoryDetailWithRessources"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/category/create": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a category",
                "description": "Creates a new category. This endpoint is restricted to admin users.",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "icon",
                                    "color"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the category",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "Icon representing the category",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "Color associated with the category. Hexadecimal format with or without '#': #000000",
                                        "type": "string"
                                    },
                                    "isActive": {
                                        "description": "Whether the category is active. Visible to admins only.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "$ref": "#/components/schemas/CategoryDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": [
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/category/edit/{id}": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Edit a category",
                "description": "Edit an existing category. This endpoint is restricted to admin users.",
                "operationId": "editCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to edit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the category",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the category",
                                        "type": "string"
                                    },
                                    "icon": {
                                        "description": "Icon representing the category",
                                        "type": "string"
                                    },
                                    "color": {
                                        "description": "Color associated with the category. Hexadecimal format with or without '#': #000000",
                                        "type": "string"
                                    },
                                    "isActive": {
                                        "description": "Whether the category is active. Visible to admins only.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category edited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category": {
                                            "$ref": "#/components/schemas/CategoryDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": [
                                                    "string"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/category/delete/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category by its ID. This endpoint is restricted to admin users.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Error while deleting the category"
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/stats/categories": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Retrieve category statistics",
                "description": "Fetches statistics for categories, including the count of resources in each category. Accessible only to admins.",
                "operationId": "getCategoriesStatsCount",
                "responses": {
                    "200": {
                        "description": "Category statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "description": "An array of categories with their resource counts and details",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The unique identifier of the category",
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "description": "The title of the category",
                                                        "type": "string"
                                                    },
                                                    "color": {
                                                        "description": "The color associated with the category",
                                                        "type": "string"
                                                    },
                                                    "icon": {
                                                        "description": "The icon representing the category",
                                                        "type": "string"
                                                    },
                                                    "ressourcesCount": {
                                                        "description": "Number of resources in this category",
                                                        "type": "integer"
                                                    },
                                                    "isActive": {
                                                        "description": "Whether the category is active",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Access restricted to admins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Access restricted to admins"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Retrieve all cities",
                "description": "Fetches a list of all cities available in the database.",
                "operationId": "getAllCities",
                "responses": {
                    "200": {
                        "description": "A list of cities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id_city": {
                                                "description": "The unique identifier of the city",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "The name of the city",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment/create": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a comment on a resource",
                "description": "Allows an authenticated user to post a comment on a specific resource. Comments can optionally be replies to existing comments.",
                "operationId": "createComment",
                "requestBody": {
                    "description": "Data needed to create a new comment",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "idRessource",
                                    "comment"
                                ],
                                "properties": {
                                    "idRessource": {
                                        "description": "The ID of the resource to which the comment is posted",
                                        "type": "integer"
                                    },
                                    "comment": {
                                        "description": "The content of the comment",
                                        "type": "string"
                                    },
                                    "idParent": {
                                        "description": "Optional ID of the parent comment if this is a reply",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment posted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment posted successfully"
                                        },
                                        "comment": {
                                            "$ref": "#/components/schemas/CommentData"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Detailed validation errors",
                                            "type": "object",
                                            "additionalProperties": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "property": null
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Parent not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Parent not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/delete/{id}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "description": "Allows an authenticated user to delete their own comment or a moderator to delete any comment. If the comment has replies, it is not removed but marked as deleted.",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully or marked as deleted if it has replies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User can only delete their own comments or requires moderator rights",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - You can only delete your own comments"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/accept/{id}": {
            "patch": {
                "tags": [
                    "Comments"
                ],
                "summary": "Accept a comment",
                "description": "Allows a moderator to accept a comment that is currently in a pending state. The comment can only be accepted if it is pending and, if it has a parent comment, the parent must also be accepted.",
                "operationId": "acceptComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be accepted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire accepté"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Comment not in pending state or parent comment not accepted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire n'est pas en attente or Le commentaire parent n'est pas accepté"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have moderator privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have moderator privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/reject/{id}": {
            "patch": {
                "tags": [
                    "Comments"
                ],
                "summary": "Reject a comment",
                "description": "Allows a moderator to reject a comment that is currently in a pending state. Only comments that are pending can be rejected.",
                "operationId": "rejectComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to be rejected",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire rejeté"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Comment not in pending state",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire n'est pas en attente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commentaire non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have moderator privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have moderator privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/pending": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Retrieve all pending comments",
                "description": "Fetches a list of all comments that are currently in a pending state, formatted for display.",
                "operationId": "getPendingComments",
                "responses": {
                    "200": {
                        "description": "A list of pending comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "description": "An array of formatted comments",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FormattedComment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have the appropriate privileges (e.g., moderator)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have the appropriate privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/accepted": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Retrieve all accepted comments",
                "description": "Fetches a list of all comments that are currently in an accepted state, formatted for display.",
                "operationId": "getAcceptedComments",
                "responses": {
                    "200": {
                        "description": "A list of accepted comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "description": "An array of formatted comments",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FormattedComment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have the appropriate privileges (e.g., moderator)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have the appropriate privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/comment/rejected": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Retrieve all rejected comments",
                "description": "Fetches a list of all comments that are currently in a rejected state, formatted for display.",
                "operationId": "getRejectedComments",
                "responses": {
                    "200": {
                        "description": "A list of rejected comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "description": "An array of formatted comments",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FormattedComment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have the appropriate privileges (e.g., moderator)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have the appropriate privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/stats/comments": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Retrieve statistics about comments",
                "description": "Fetches statistics about comments, including the total number of comments, the number of comments that are pending, accepted, and rejected, and the number of comments posted in the last week.",
                "operationId": "getCommentsStats",
                "responses": {
                    "200": {
                        "description": "Statistics about comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comments": {
                                            "properties": {
                                                "total": {
                                                    "description": "The total number of comments",
                                                    "type": "integer"
                                                },
                                                "pending": {
                                                    "description": "The number of comments that are pending",
                                                    "type": "integer"
                                                },
                                                "accepted": {
                                                    "description": "The number of comments that are accepted",
                                                    "type": "integer"
                                                },
                                                "rejected": {
                                                    "description": "The number of comments that are rejected",
                                                    "type": "integer"
                                                },
                                                "lastWeek": {
                                                    "description": "The number of comments posted in the last week",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in and have the appropriate privileges (e.g., moderator)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in and have the appropriate privileges"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get list of countries",
                "description": "Returns a list of countries with their ID, name, and code.",
                "operationId": "getCountries",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countries": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/postalCode": {
            "get": {
                "tags": [
                    "Postal Code"
                ],
                "summary": "Retrieve all postal codes",
                "description": "Fetches a list of all postal codes available in the database.",
                "operationId": "getAllPostalCodes",
                "responses": {
                    "200": {
                        "description": "A list of postal codes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id_postal_code": {
                                                "description": "The unique identifier of the postal code",
                                                "type": "integer"
                                            },
                                            "postal_code": {
                                                "description": "The value of the postal code",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ressource/{id}": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get a specific ressource",
                "description": "Retrieves detailed information about a specific ressource by ID and increments its view count.",
                "operationId": "getRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ressource to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ressource retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressource": {
                                            "$ref": "#/components/schemas/RessourceDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ressource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ressource/create": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Create a new ressource",
                "description": "Creates a new ressource with the given details. Returns the ID of the newly created ressource.",
                "operationId": "createRessource",
                "requestBody": {
                    "description": "Data for the new ressource",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label",
                                    "description",
                                    "idCategory"
                                ],
                                "properties": {
                                    "label": {
                                        "description": "The label of the new ressource",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the new ressource",
                                        "type": "string"
                                    },
                                    "idCategory": {
                                        "description": "The category ID for the new ressource",
                                        "type": "integer"
                                    },
                                    "isPublic": {
                                        "description": "Whether the ressource is public",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "ressource created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource créée avec succès"
                                        },
                                        "idRessource": {
                                            "description": "The ID of the newly created ressource",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User must verify their account before creating a ressource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vous devez vérifier votre compte avant de pouvoir créer une ressource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Detailed validation errors",
                                            "type": "object",
                                            "additionalProperties": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "property": null
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ressource/edit/{id}": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Edit a specific resource",
                "description": "Allows an authenticated user to edit their own resource. The resource's status is set to pending after the edit.",
                "operationId": "editRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource to be edited",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Fields required to edit the resource",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "label",
                                    "description",
                                    "idCategory",
                                    "isPublic"
                                ],
                                "properties": {
                                    "label": {
                                        "description": "The new label of the resource",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The new description of the resource",
                                        "type": "string"
                                    },
                                    "idCategory": {
                                        "description": "The category ID of the resource",
                                        "type": "integer"
                                    },
                                    "isPublic": {
                                        "description": "Whether the resource should be public",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource edited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource modifiée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have rights to modify this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vous n'avez pas les droits pour modifier cette ressource ou vous devez avoir un compte vérifié pour pouvoir modifier une ressource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation message",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Detailed validation errors",
                                            "type": "object",
                                            "additionalProperties": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "property": null
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/delete/{id}": {
            "delete": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Delete a specific resource",
                "description": "Allows an authenticated user to delete their own resource, or allows staff members (moderators, administrators, super administrators) to delete any resource. The operation checks if the user owns the resource or if the user is a staff member before allowing deletion.",
                "operationId": "deleteRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the resource to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource supprimée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User does not have rights to delete this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vous n'avez pas les droits pour supprimer cette ressource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/myRessources": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get user's ressources",
                "description": "Retrieves a list of ressources created by the authenticated user.",
                "operationId": "getMyRessources",
                "responses": {
                    "200": {
                        "description": "ressources retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/myRessources/stats": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get statistics on the user's ressources",
                "description": "Retrieves statistics about the authenticated user's ressources, including totals, views, and status counts.",
                "operationId": "getMyRessourcesStats",
                "responses": {
                    "200": {
                        "description": "User's ressources statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of the user's ressources",
                                                    "type": "integer"
                                                },
                                                "totalView": {
                                                    "description": "Total views across the user's ressources",
                                                    "type": "integer"
                                                },
                                                "public": {
                                                    "description": "Count of the user's public ressources",
                                                    "type": "integer"
                                                },
                                                "private": {
                                                    "description": "Count of the user's private ressources",
                                                    "type": "integer"
                                                },
                                                "pending": {
                                                    "description": "Count of the user's ressources pending moderation",
                                                    "type": "integer"
                                                },
                                                "accepted": {
                                                    "description": "Count of the user's ressources accepted by moderators",
                                                    "type": "integer"
                                                },
                                                "rejected": {
                                                    "description": "Count of the user's ressources rejected by moderators",
                                                    "type": "integer"
                                                },
                                                "blocked": {
                                                    "description": "Count of the user's ressources blocked by moderators",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/pending": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get pending ressources",
                "description": "Retrieves a list of all ressources that are currently pending. This endpoint is restricted to moderators.",
                "operationId": "getPendingRessources",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/accepted": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get accepted ressources",
                "description": "Retrieves a list of all ressources that have been accepted. This endpoint is restricted to moderators.",
                "operationId": "getAcceptedRessources",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/rejected": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get rejected ressources",
                "description": "Retrieves a list of all ressources that have been rejected. This endpoint is restricted to moderators.",
                "operationId": "getRejectedRessources",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/blocked": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get blocked ressources",
                "description": "Retrieves a list of all ressources that have been blocked. This endpoint is restricted to moderators.",
                "operationId": "getBlockedRessources",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/accept/{id}": {
            "patch": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Accept a ressource",
                "description": "Marks a pending ressource as accepted. This endpoint is restricted to moderators.",
                "operationId": "acceptRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ressource to accept",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ressource accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource acceptée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ressource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/reject/{id}": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Reject a specific ressource",
                "description": "Rejects a specific ressource by changing its status to rejected and records a staff comment. This endpoint is restricted to moderators.",
                "operationId": "rejectRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ressource to reject",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Staff comment on why the ressource is being rejected",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staffComment"
                                ],
                                "properties": {
                                    "staffComment": {
                                        "description": "Comment explaining the reason for rejection",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ressource rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource refusée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ressource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/stats/ressources": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get statistics about ressources, Moderator and more",
                "description": "Retrieves statistics about ressources, including totals, views, and status counts.",
                "operationId": "getRessourcesStats",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "properties": {
                                                "total": {
                                                    "description": "Total number of ressources",
                                                    "type": "integer"
                                                },
                                                "totalView": {
                                                    "description": "Total views across all ressources",
                                                    "type": "integer"
                                                },
                                                "public": {
                                                    "description": "Count of public ressources",
                                                    "type": "integer"
                                                },
                                                "private": {
                                                    "description": "Count of private ressources",
                                                    "type": "integer"
                                                },
                                                "pending": {
                                                    "description": "Count of ressources pending moderation",
                                                    "type": "integer"
                                                },
                                                "accepted": {
                                                    "description": "Count of ressources accepted by moderators",
                                                    "type": "integer"
                                                },
                                                "rejected": {
                                                    "description": "Count of ressources rejected by moderators",
                                                    "type": "integer"
                                                },
                                                "blocked": {
                                                    "description": "Count of ressources blocked by moderators",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stats/ressources/count": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Retrieve resource statistics",
                "description": "Fetches statistics for resources, including view counts and associated category details. Accessible only to moderators and higher.",
                "operationId": "getRessourcesStatsCount",
                "responses": {
                    "200": {
                        "description": "Resource statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "description": "An array of resources with their view counts and category details",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "idRessource": {
                                                        "description": "The unique identifier of the resource",
                                                        "type": "integer"
                                                    },
                                                    "viewCount": {
                                                        "description": "Number of views this resource has received",
                                                        "type": "integer"
                                                    },
                                                    "label": {
                                                        "description": "The label or title of the resource",
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "description": "Details about the category this resource belongs to",
                                                        "properties": {
                                                            "idCategory": {
                                                                "description": "The unique identifier of the category",
                                                                "type": "integer"
                                                            },
                                                            "color": {
                                                                "description": "Color associated with the category",
                                                                "type": "string"
                                                            },
                                                            "icon": {
                                                                "description": "Icon representing the category",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in as a moderator or higher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in as a moderator or higher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressources/block/{id}": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Block a specific ressource",
                "description": "Blocks a specific ressource by changing its status to blocked and records a staff comment. This endpoint is restricted to moderators.",
                "operationId": "blockRessource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ressource to block",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Staff comment on why the ressource is being blocked",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "staffComment"
                                ],
                                "properties": {
                                    "staffComment": {
                                        "description": "Comment explaining the reason for blocking",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ressource blocked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource bloquée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Staff comment missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Commentaire du staff manquant",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "ressource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Moderator access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access restricted to moderators"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/favorite/get": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get user's favorite resources",
                "description": "Retrieves a list of favorite resources for the authenticated user, providing detailed information about each resource.",
                "operationId": "getFavorites",
                "responses": {
                    "200": {
                        "description": "Favorites retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "description": "An array of the user's favorite resources",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/favorite/add": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Add a resource to favorites",
                "description": "Allows an authenticated user to add a resource to their favorites. Validates that the resource exists and is not already favorited by the user.",
                "operationId": "addFavorite",
                "requestBody": {
                    "description": "Resource ID to add to favorites",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ressourceId"
                                ],
                                "properties": {
                                    "ressourceId": {
                                        "description": "The ID of the resource to be added to favorites",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource added to favorites or already in favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource ajoutée aux favoris or Ressource déjà ajoutée aux favoris"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resource ID missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ID de la ressource manquant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/favorite/remove": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Remove a resource from favorites",
                "description": "Allows an authenticated user to remove a resource from their favorites list. Validates that the resource exists in the user's favorites before removal.",
                "operationId": "removeFavorite",
                "requestBody": {
                    "description": "Resource ID to remove from favorites",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ressourceId"
                                ],
                                "properties": {
                                    "ressourceId": {
                                        "description": "The ID of the resource to be removed from favorites",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resource removed from favorites successfully or not found in favorites",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource retirée des favoris or Ressource non trouvée dans les favoris"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resource ID missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ID de la ressource manquant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/bookmark/get": {
            "get": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Get user's bookmarked resources",
                "description": "Retrieves a list of bookmarked resources for the authenticated user, providing detailed information about each resource.",
                "operationId": "getBookmarks",
                "responses": {
                    "200": {
                        "description": "Bookmarks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "description": "An array of the user's bookmarked resources",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/bookmark/add": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Add a bookmark to a resource",
                "description": "Allows an authenticated user to add a bookmark to a resource. Ensures the resource exists and is not already bookmarked by the user.",
                "operationId": "addBookmark",
                "requestBody": {
                    "description": "Provide the ID of the resource to be bookmarked",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ressourceId"
                                ],
                                "properties": {
                                    "ressourceId": {
                                        "description": "The ID of the resource to be bookmarked",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bookmark added successfully or already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource ajoutée aux bookmarks or Ressource déjà ajoutée aux bookmarks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resource ID missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ID de la ressource manquant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/ressource/bookmark/remove": {
            "post": {
                "tags": [
                    "Ressource"
                ],
                "summary": "Remove a bookmark from a resource",
                "description": "Allows an authenticated user to remove a bookmark from a resource. Ensures the resource exists and is bookmarked by the user before removal.",
                "operationId": "removeBookmark",
                "requestBody": {
                    "description": "Provide the ID of the resource to remove from bookmarks",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "ressourceId"
                                ],
                                "properties": {
                                    "ressourceId": {
                                        "description": "The ID of the resource whose bookmark is to be removed",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Bookmark removed successfully or not found in bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource retirée des bookmarks or Ressource non trouvée dans les bookmarks"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Resource ID missing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ID de la ressource manquant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ressource non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/search": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Search resources and categories",
                "description": "Performs a search across resources and categories based on a given search value.",
                "operationId": "searchRessourcesAndCategories",
                "requestBody": {
                    "description": "Search payload",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "searchValue"
                                ],
                                "properties": {
                                    "searchValue": {
                                        "description": "The value to search for in resources and categories",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ressources": {
                                            "description": "An array of resources that match the search criteria",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RessourceDetail"
                                            }
                                        },
                                        "categories": {
                                            "description": "An array of categories that match the search criteria",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryDetail"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Valeur de recherche manquante"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stats/connections": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get connection statistics",
                "description": "Fetches connection counts for a given date range along with the day having the highest average connections.",
                "operationId": "getConnections",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for fetching connections (format: DD-MM-YYYY)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for fetching connections (format: DD-MM-YYYY)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "connections": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "example": "06-03-2024"
                                                    },
                                                    "numberConnections": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "average": {
                                            "properties": {
                                                "day": {
                                                    "type": "string",
                                                    "example": "mercredi"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "2,0"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a list of users with optional search, sort, and pagination",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term to apply on firstName, lastName, and email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchColumn",
                        "in": "query",
                        "description": "Column to specifically search in (firstName, lastName, email, etc.)",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchValue",
                        "in": "query",
                        "description": "Value to search for in the specified column",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Column to sort the users by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortDirection",
                        "in": "query",
                        "description": "Direction to sort (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserDetail"
                                            }
                                        },
                                        "totalUsers": {
                                            "type": "integer"
                                        },
                                        "perPage": {
                                            "type": "integer"
                                        },
                                        "currentPage": {
                                            "type": "integer"
                                        },
                                        "lastPage": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin or Super Admin role required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "description": "Registers a new user into the system with provided user details. Validates input data and checks for email uniqueness. On success, sends a verification email.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User data needed to register a new account",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email",
                                    "password",
                                    "role"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "role": {
                                        "description": "The role name must exist in the roles table.",
                                        "type": "string",
                                        "example": "User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Champ(s) incorects"
                                        },
                                        "errors": {
                                            "properties": {
                                                "firstName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The first name field is required."
                                                    }
                                                },
                                                "lastName": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The last name field is required."
                                                    }
                                                },
                                                "role": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected role is invalid."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Email already take"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Super Admin role required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden - Super Admin role required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/profil/update": {
            "post": {
                "tags": [
                    "Profil"
                ],
                "summary": "Update the user's profile",
                "description": "Allows authenticated users to update their own profile information. SuperAdministrateurs can update additional fields like 'role'.",
                "operationId": "updateUserProfile",
                "requestBody": {
                    "description": "Profile data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "description": "User's first name",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "lastName": {
                                        "description": "User's last name",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "isEmailVerified": {
                                        "description": "Whether the user's email is verified",
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "country": {
                                        "description": "User's country",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "User's city",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "postalCode": {
                                        "description": "User's postal code",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur mis à jour avec succès"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserDetail"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation errors during profile update",
                                            "type": "string"
                                        },
                                        "errors": {
                                            "description": "Detailed validation errors",
                                            "type": "object",
                                            "additionalProperties": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "property": null
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - User must be logged in"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une erreur est survenue lors de la mise à jour de l'utilisateur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/profil/updatepassword": {
            "post": {
                "tags": [
                    "Profil"
                ],
                "summary": "Update the user's password",
                "description": "Allows an authenticated user to update their password. The user must provide their current password, and the new password must be confirmed.",
                "operationId": "updateUserPassword",
                "requestBody": {
                    "description": "Password update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "confirmPassword",
                                    "oldPassword"
                                ],
                                "properties": {
                                    "password": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "confirmPassword": {
                                        "description": "Confirmation of the new password",
                                        "type": "string"
                                    },
                                    "oldPassword": {
                                        "description": "The current password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mot de passe mis à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or incorrect old password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ancien mot de passe incorrect"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une erreur est survenue lors de la mise à jour de l'utilisateur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/delete/{id}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Deletes a user. This action is restricted to Super Administrators only.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur supprimé avec succés."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized: Only a Super Administrator can delete a user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Non autorisé : Seul un super administrateur peut supprimer un utilisateur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/ban/{id}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Ban a user",
                "description": "Bans a user either permanently or until a specified timestamp. Super Administrators and Administrators cannot be banned.",
                "operationId": "banUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to ban",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Ban details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "isPermanent"
                                ],
                                "properties": {
                                    "isPermanent": {
                                        "description": "Whether the ban is permanent",
                                        "type": "boolean"
                                    },
                                    "banTimestamp": {
                                        "description": "The UNIX timestamp until which the user is banned. Required if `isPermanent` is false.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User has been banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'utilisateur a été banni."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or ban date in the past",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized attempt to ban an Administrator or Super Administrator",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Non autorisé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/user/unban/{id}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Unban a user",
                "description": "Unban a previously unban user.",
                "operationId": "unbanUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the user to unban",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User has been unban.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'utilisateur a été débanni"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or not banned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé ou pas banni"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/stats/users": {
            "get": {
                "tags": [
                    "Statistics"
                ],
                "summary": "Get users statistics",
                "description": "Returns statistics about users, including total users, distribution by roles, banned users count, and unverified emails count.",
                "operationId": "getUsersInformation",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "totalUsers": {
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "usersByRole": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "description": "The name of the role",
                                                        "type": "string"
                                                    },
                                                    "userCount": {
                                                        "description": "The count of users with this role",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "name": "Administrateur",
                                                    "userCount": 1
                                                },
                                                {
                                                    "name": "Moderateur",
                                                    "userCount": 5
                                                },
                                                {
                                                    "name": "SuperAdministrateur",
                                                    "userCount": 2
                                                },
                                                {
                                                    "name": "Utilisateur",
                                                    "userCount": 7
                                                }
                                            ]
                                        },
                                        "bannedUsersCount": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "unverifiedEmailsCount": {
                                            "type": "integer",
                                            "example": 6
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/users/history": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Fetch users' history",
                "description": "Retrieves a paginated history of actions performed on users, including detailed information about the user modified and the user who performed the modification.",
                "operationId": "getUsersHistory",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of history records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "userHistory": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserHistoryRecord"
                                            }
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "perPage": {
                                            "type": "integer"
                                        },
                                        "currentPage": {
                                            "type": "integer"
                                        },
                                        "lastPage": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "description": "Detailed information about a category",
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Icon representing the category",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color associated with the category. Hexadecimal format with '#': #000000",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "Creation date of the category",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "description": "Last update date of the category",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FormattedComment": {
                "description": "Formatted information about a comment",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the comment",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserData"
                    },
                    "comment": {
                        "description": "The content of the comment",
                        "type": "string"
                    },
                    "createAt": {
                        "description": "The date and time when the comment was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "ressourceId": {
                        "description": "Ressource Id of the comment",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Country": {
                "properties": {
                    "id": {
                        "description": "Unique identifier for the country",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the country",
                        "type": "string"
                    },
                    "code": {
                        "description": "Country code",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserHistoryRecord": {
                "description": "A record of an action performed on a user",
                "properties": {
                    "userModified": {
                        "$ref": "#/components/schemas/UserDetail"
                    },
                    "modifyBy": {
                        "$ref": "#/components/schemas/UserDetail"
                    },
                    "action": {
                        "description": "The type of action performed",
                        "type": "string"
                    },
                    "time": {
                        "description": "The timestamp when the action was performed",
                        "type": "string",
                        "format": "date-time"
                    },
                    "colName": {
                        "description": "The column name that was modified, applicable for 'Modify' actions",
                        "type": "string"
                    },
                    "newValue": {
                        "description": "The new value for the modified column, applicable for 'Modify' actions",
                        "type": "string"
                    },
                    "oldValue": {
                        "description": "The old value for the modified column, applicable for 'Modify' actions",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserData": {
                "properties": {
                    "firstName": {
                        "description": "User's first name",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "User's last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "imgURL": {
                        "description": "URL to the user's profile picture",
                        "type": "string"
                    },
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "role": {
                        "description": "User's role name",
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "description": "Indicates if the user's email is verified",
                        "type": "boolean"
                    },
                    "newUser": {
                        "description": "Indicates if the user is new",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserDetail": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "imgURL": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "isBanned": {
                        "type": "boolean"
                    },
                    "newUser": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "CategoryData": {
                "description": "Information about a category",
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Icon representing the category",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color associated with the category. Hexadecimal format with '#': #000000",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "Creation date of the category",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "description": "Last update date of the category",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CategoryDetail": {
                "description": "Detailed information about a category",
                "properties": {
                    "id": {
                        "description": "Category ID",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the category",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the category",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Icon representing the category",
                        "type": "string"
                    },
                    "color": {
                        "description": "Color associated with the category. Hexadecimal format with '#': #000000",
                        "type": "string"
                    },
                    "createdAt": {
                        "description": "Creation date of the category",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "description": "Last update date of the category",
                        "type": "string",
                        "format": "date-time"
                    },
                    "isActive": {
                        "description": "Whether the category is active. Visible to admins only.",
                        "type": "boolean"
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/UserDetail"
                    }
                },
                "type": "object"
            },
            "CategoryDetailWithRessources": {
                "description": "Detailed information about a category, including its associated resources",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/CategoryDetail"
                    },
                    {
                        "properties": {
                            "ressources": {
                                "description": "An array of resources associated with the category",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RessourceDetail"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RessourceDetail": {
                "description": "Detailed information about a resource",
                "properties": {
                    "id": {
                        "description": "The unique identifier of the resource",
                        "type": "integer"
                    },
                    "label": {
                        "description": "The label or title of the resource",
                        "type": "string"
                    },
                    "description": {
                        "description": "The detailed description of the resource",
                        "type": "string"
                    },
                    "isPublic": {
                        "description": "Indicates if the resource is public",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The status of the resource",
                        "type": "string"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryData"
                    },
                    "viewCount": {
                        "description": "Number of views this resource has received",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserData"
                    },
                    "creationDate": {
                        "description": "The date and time when the resource was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModificationDate": {
                        "description": "The date and time when the resource was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "staffComment": {
                        "description": "Staff comments on the resource, if any",
                        "type": "string"
                    },
                    "isFavorite": {
                        "description": "Indicates whether the resource is marked as a favorite by the current user",
                        "type": "boolean"
                    },
                    "isBookmark": {
                        "description": "Indicates whether the resource is bookmarked by the current user",
                        "type": "boolean"
                    },
                    "comments": {
                        "description": "List of comments associated with the resource",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentData"
                        }
                    }
                },
                "type": "object"
            },
            "CommentData": {
                "properties": {
                    "id": {
                        "description": "Comment ID",
                        "type": "integer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserData"
                    },
                    "comment": {
                        "description": "The comment text",
                        "type": "string"
                    },
                    "createAt": {
                        "description": "The date and time when the comment was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "children": {
                        "description": "An array of child comments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentData"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "apiKey",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}